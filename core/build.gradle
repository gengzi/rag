plugins {
    id 'java'
}
group = 'com.gengzi'
version = '0.0.1-SNAPSHOT'

repositories {
    // 优先使用国内仓库
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    // 最后 fallback 到官方仓库
    mavenCentral()
    gradlePluginPortal()
}

springBoot {
    mainClass = 'com.gengzi.RagServerApplication'
}

bootJar {
    // 确保主类被正确包含
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
    dependencies {

    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor:reactor-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.springframework.ai:spring-ai-rag"
    implementation "org.springframework.ai:spring-ai-starter-model-openai"
    // https://mvnrepository.com/artifact/org.springframework.ai/spring-ai-core
    implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
//    implementation 'org.springframework.ai:spring-ai-starter-vector-store-milvus'
    implementation 'org.springframework.ai:spring-ai-advisors-vector-store'
    // https://mvnrepository.com/artifact/org.springframework.ai/spring-ai-markdown-document-reader
    implementation "org.springframework.ai:spring-ai-markdown-document-reader"
    implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
    // es
//    implementation 'org.springframework.ai:spring-ai-starter-vector-store-elasticsearch'
    implementation 'org.springframework.ai:spring-ai-elasticsearch-store'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // security
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0")
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // mcp
    implementation 'org.springframework.ai:spring-ai-starter-mcp-client-webflux'

//    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0' // 包含UI界面
//    implementation 'org.springdoc:springdoc-openapi-security:1.7.0' // 若有Spring Security需添加
    implementation 'io.jsonwebtoken:jjwt:0.12.6'
    // 引入jdbc
    implementation 'org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // 数据库相关
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.checkerframework:checker-qual:3.49.1'
    // langchain4j
    implementation 'dev.langchain4j:langchain4j-core:1.7.1' // 建议使用最新版本
    // https://mvnrepository.com/artifact/com.hankcs/hanlp
    implementation("com.hankcs:hanlp:portable-1.8.6")

    implementation 'org.elasticsearch.client:elasticsearch-rest-client:9.1.4'
    implementation 'co.elastic.clients:elasticsearch-java:9.1.4'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30' // 注解处理器，用于生成代码

    // s3相关
    implementation 'software.amazon.awssdk:netty-nio-client:2.32.16'
    implementation("software.amazon.awssdk:s3-transfer-manager:2.32.16")
    implementation 'software.amazon.awssdk:s3:2.32.16'
    implementation 'software.amazon.awssdk:core:2.32.16'
    // 工具包
    implementation 'cn.hutool:hutool-all:5.8.16'

    // https://mvnrepository.com/artifact/com.alibaba/transmittable-thread-local
    implementation("com.alibaba:transmittable-thread-local:2.14.5")

    // 解析markdown
    implementation 'org.commonmark:commonmark-ext-gfm-tables:0.22.0'
    implementation 'org.commonmark:commonmark-ext-image-attributes:0.22.0'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}